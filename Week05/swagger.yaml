openapi: 3.0.0
info:
  title: Student API
  description: Student api to manage student records
  version: 0.1.9
servers:
  - url: http://localhost:3002
    description: Local server
  - url: http://157.230.59.55:3002
    description: dev hosted server
paths:
  /students:
    get:
      summary: Returns a list of student.
      description: All student record in the store will be returned.
      responses:
        '200':
          description: A JSON array of user names
  /student:
    post:
      summary: Add a student record.
      description: Add a new student record if student id already exists return error message.
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: object
                properties:
                  id: 
                    type: number
                    example: 123
                  firstName:
                    type: string
                    example: 'Akhil Reddy'
                  lastName:
                    type: string
                    example: 'Gangula'
                  deptName:
                    type: string
                    example: 'Computer Science'
                  email:
                    type: string
                    example: 'agangula@uncc.edu'
                  admitted:
                    type: boolean
                    example: false
                  age:
                    type: number
                    example: 25
      responses:
        '200':
          description: A JSON array of student records
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type: number
                    firstName:
                      type: string
                    lastName:
                      type: string
                    deptName:
                      type: string
                    email:
                      type: string
                    admitted:
                      type: boolean
                    age:
                      type: number
  /student/{studentId}:
    put:
      summary: Add a student record if it doesn't exist, else updates the present record by id.
      description: Add a student record if it doesn't exist, else updates the present record by id.
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: object
                properties:
                  id: 
                    type: number
                    example: 1234
                  firstName:
                    type: string
                    example: 'Subham'
                  lastName:
                    type: string
                    example: 'Sah'
                  deptName:
                    type: string
                    example: 'Architecture'
                  email:
                    type: string
                    example: 'ssah01@uncc.edu'
                  admitted:
                    type: boolean
                    example: true
                  age:
                    type: number
                    example: 26
      parameters:
        - in: path
          name: studentId
          required: true
          example: 123
          type: integer
          minimum: 1
          description: The ID of the student to be added.
      responses:
        '200':
          description: A JSON array of student records
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type: number
                    firstName:
                      type: string
                    lastName:
                      type: string
                    deptName:
                      type: string
                    email:
                      type: string
                    admitted:
                      type: boolean
                    age:
                      type: number
    patch:
      summary: Updates the present record by id.
      description: Returns error if record is not present, else updates the record.
      requestBody:
        required: true
        content:
          application/json:
              schema: 
                type: object
                properties:
                  id:
                    type: number
                    example: 123
                  firstName:
                    type: string
                    example: 'Akhil Reddy'
                  lastName:
                    type: string
                    example: 'Gangula'
                  deptName:
                    type: string
                    example: 'Computer Science'
                  email:
                    type: string
                    example: 'agangula@uncc.edu'
                  admitted:
                    type: boolean
                    example: false
                  age:
                    type: number
                    example: 25
      parameters:
        - in: path
          name: studentId
          required: true
          type: integer
          minimum: 1
          description: The ID of the student to be updated.
      responses:
        '200':
          description: A JSON array of student records
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type: number
                    firstName:
                      type: string
                    lastName:
                      type: string
                    deptName:
                      type: string
                    email:
                      type: string
                    admitted:
                      type: boolean
                    age:
                      type: number
    delete:
      summary: Deletes a student record by id.
      description: Returns error if record is not present, else deletes the record.
      parameters:
        - in: path
          name: studentId
          required: true
          type: integer
          example: 123
          minimum: 1
          description: The ID of the student to be deleted.
      responses:
        '200':
          description: A JSON array of student records
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type: number
                    firstName:
                      type: string
                    lastName:
                      type: string
                    deptName:
                      type: string
                    email:
                      type: string
                    admitted:
                      type: boolean
                    age:
                      type: number
  